/*
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

 /*
  * Author: Alban Li√©nart
  */

rule NetworkAdminUser {
    description: "Grant business network administrators full access to user resources"
    participant: "org.hyperledger.composer.system.NetworkAdmin"
    operation: ALL
    resource: "**"
    action: ALLOW
}

rule NetworkAdminSystem {
    description: "Grant business network administrators full access to system resources"
    participant: "org.hyperledger.composer.system.NetworkAdmin"
    operation: ALL
    resource: "org.hyperledger.composer.system.**"
    action: ALLOW
}

rule Default {
    description: "Refuse all access by default"
    participant: "org.hyperledger.composer.system.Participant"
    operation: ALL
    resource: "**"
    action: DENY
}

rule GrantReadOnlyAccessRegulator {
    description: "Grant read permissions to Regulator"
    participant: "org.coopact.Regulator"
    operation: READ
    resource: "**"
    action: ALLOW
}

rule GrantReadOnlyAccessCooperateur {
    description: "Grant read permissions only to Cooperateur to his shares"
    participant (p): "org.coopact.Cooperateur"
    operation: READ
    resource (r): "org.coopact.Share"
    condition: (r.owner.getIdentifier() == p.getIdentifier() )
    action: ALLOW
}

rule GrantReadOnlyAccessCooperateurAll {
    description: ".Grant read permissions only to Cooperateur to his shares and the one from the cooperative in which he has a share"
    participant (p): "org.coopact.Cooperateur"
    operation: READ
    resource (r): "org.coopact.Share"
    condition: (r.company.getIdentifier() == p.getIdentifier() )
    action: ALLOW
}

rule GrantUpdateAccessCooperateur {
    description: "Grant update permissions to Cooperateur for his own personal data"
    participant (p): "org.coopact.Cooperateur"
    operation: UPDATE
    resource (r): "org.coopact.Cooperateur"
    condition: (r.getIdentifier() == p.getIdentifier() )
    action: ALLOW
}

ruleCooperativeCanSellHerShare {
    description: "Allow only a Cooperative to sell her shares"
    participant(p): "org.coopact.*"
    operation: CREATE
    resource(r): "org.coopact.SellShare"
    condition: (r.cooperative.getIdentifier() == p.getIdentifier() )
    action: ALLOW
}

ruleCooperateurCanReturnHisShare {
    description: "Allow only a Cooperative to return shares"
    participant(p): "org.coopact.*"
    operation: CREATE
    resource(r): "org.coopact.ReturnShare"
    condition: (r.cooperative.getIdentifier() == p.getIdentifier())
    action: ALLOW
}

ruleCooperativeCanInteractShare {
    description: "Allow a Cooperative to ineract only with her shares"
    participant(p): "org.coopact.Cooperative"
    operation: ALL
    resource(r): "org.coopact.Share"
    condition: (r.company.getIdentifier() == p.getIdentifier() )
    action: ALLOW
}

rule historianAccess{
  description: "Only allow members to read historian records referencing transactions they submitted."
  participant(p): "org.coopact.Individual"
  operation: READ
  resource(r): "org.hyperledger.composer.system.HistorianRecord"
  condition: (r.participantInvoking.getIdentifier() == p.getIdentifier())
  action: ALLOW

}
